JavaScript是一种“动态类型”（dynamically typed）语言，指编程语言中有不同的数据类型，且定义的变量不会在定义后，被限制位某一数据类型。
JavaScript中有7中基本的数据类型，包含6中基本数据类型（原生类型）和object复杂数据类型。

1.number类型
代表整数和浮点数；除了常规数字，还包括Infinity（无穷）、-Infinity和NaN（计算错误）。

2.string类型
代表字符串，可以包含一个或多个字符，js中的字符串必须被括在引号里，let str="Hello".
有三种字符串方式：
双引号："Hello" 
单引号：'Hello'
单引号和双引号都是简单引用，在js中没差别。

反引号：`Hello`,反引号的其他作用，允许我们通过将变量和表达式包装在${...}中，来嵌入到字符串中,其它引号不支持。
    let name="Li";
    alert(`Hello,${name}!`);//嵌入变量，Hello,Li!
    alert(`sum is ${1+2}`);//嵌入表达式，sum is 3

3.boolean类型（逻辑类型）
仅包含两个值：true和false。

4.null值
特殊的null值不属于以上任何类型，它构成一个独立类型，只包含null值。
let age=null;//空值

5.undefined值
特殊值undefined和null类似，独立的类型，指未被赋值。
一个变量已被声明，但未赋值，它的值就是undefined。
let x;
alert(x);//undefined

6.symbol类型
用于创建对象的唯一标识符。

7.object类型
其他数据类型称为“原生类型”，因为他们的值只包含一个单独内容，object是用于存储数据集合和更复杂的实体。

typeof运算符
可以通过typeof运算符查看存储在变量中的数据类型。
typeof x或者typeof(x).
注：typeof null会返回"object"，这是js编程语言的一个错误，它并不是一个object。

